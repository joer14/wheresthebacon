{
  "name": "generator-angular-fullstack",
  "version": "1.3.3",
  "description": "Yeoman generator for creating MEAN stack applications, using MongoDB, Express, AngularJS, and Node",
  "keywords": [
    "yeoman-generator",
    "mean",
    "mongodb",
    "angularjs",
    "express",
    "scaffold",
    "fullstack",
    "framework",
    "component",
    "front-end",
    "app"
  ],
  "homepage": "https://github.com/DaftMonk/generator-angular-fullstack",
  "bugs": {
    "url": "https://github.com/DaftMonk/generator-angular-fullstack/issues"
  },
  "author": {
    "name": "Tyler Henkel"
  },
  "main": "app/index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/DaftMonk/generator-angular-fullstack.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "yeoman-generator": "~0.16.0",
    "chalk": "~0.4.0",
    "wiredep": "~0.4.2"
  },
  "peerDependencies": {
    "generator-karma": ">=0.7.0",
    "yo": ">=1.0.0"
  },
  "devDependencies": {
    "mocha": "~1.14.0",
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.7.2",
    "grunt-conventional-changelog": "~1.0.0",
    "load-grunt-tasks": "~0.2.0",
    "marked": "~0.2.8",
    "semver": "~2.2.1",
    "underscore.string": "~2.3.1",
    "grunt-release": "~0.6.0"
  },
  "engines": {
    "node": ">=0.10.0",
    "npm": ">=1.2.10"
  },
  "licenses": [
    {
      "type": "BSD"
    }
  ],
  "readme": "# AngularJS + Express Full Stack Generator \n\nYeoman generator for creating MEAN stack applications, using MongoDB, Express, AngularJS, and Node.\n\nFeaturing: \n\n * Express server integrated with grunt tasks\n * Livereload of client and server files\n * Support for Jade and CoffeeScript\n * Easy deployment workflow.\n * Optional MongoDB integration\n * Optional Passport integration for adding user accounts\n\n## Example project\n\nGenerated by saying yes to all questions: http://fullstack-demo.herokuapp.com/. \n\nHave a look at the source code: https://github.com/DaftMonk/fullstack-demo\n\n## Prerequisites\n\n* MongoDB - Download and Install [MongoDB](http://www.mongodb.org/downloads) - If you plan on scaffolding your project with mongoose, you'll need mongoDB to be installed.\n\n## Usage\n\nInstall `generator-angular-fullstack`:\n```bash\nnpm install -g generator-angular-fullstack\n```\n\nMake a new directory, and `cd` into it:\n```bash\nmkdir my-new-project && cd $_\n```\n\nRun `yo angular-fullstack`, optionally passing an app name:\n```bash\nyo angular-fullstack [app-name]\n```\n\n## Express\n\nLaunch your express server in development mode.\n```bash\ngrunt serve\n```\n\nLaunch your express server in `debug-brk` mode with a node-inspector tab.\n```bash\ngrunt serve:debug\n``` \n\nLaunch your express server in production mode, uses the minified/optimized production folder.\n```bash\ngrunt serve:dist\n``` \n\n### Livereload\n\n`grunt serve` will watch client files in `app/`, and server files inside `lib/`, restarting the Express server when a change is detected.\n\n## Deployment\n\nTo generate a dist folder that can easily be deployed use:\n\n```bash\ngrunt\n```\n\nThis will run unit tests, jshint, concatenate and minify scripts/css, compress images, add css vendor prefixes, and finally copy all files to a tidy dist folder.\n\nAlternatively to skip tests and jshint, use:\n\n```bash\ngrunt build\n```\n\n### Heroku Deployment\n\nWe provide an extremely simplifed deployment process for heroku.\n\n`yo angular-fullstack:deploy heroku` generates a `dist` folder that is deployment ready  for [heroku.com](http://heroku.com/). \n\n**Create and Deploy an app in 4 steps**\n\n1. `mkdir foo && cd foo`\n\n2. `yo angular-fullstack`\n\n3. `yo angular-fullstack:deploy heroku`\n\n4. `cd dist && git push heroku master`\n\n5. Optional (if using mongoDB) `heroku addons:add mongohq`\n\nThat's it! Your app should be live and shareable. Type `heroku open` to view it.  \n\n## Generators\n\nAll of the **generator-angular** client side generators are available, but aliased with `angular-fullstack` to correctly generate with the fullstack folder structure. \n\nAngular sub-generators:\n\n* [angular-fullstack:controller](https://github.com/yeoman/generator-angular#controller)\n* [angular-fullstack:directive](https://github.com/yeoman/generator-angular#directive)\n* [angular-fullstack:filter](https://github.com/yeoman/generator-angular#filter)\n* [angular-fullstack:route](https://github.com/yeoman/generator-angular#route)\n* [angular-fullstack:service](https://github.com/yeoman/generator-angular#service)\n* [angular-fullstack:provider](https://github.com/yeoman/generator-angular#service)\n* [angular-fullstack:factory](https://github.com/yeoman/generator-angular#service)\n* [angular-fullstack:value](https://github.com/yeoman/generator-angular#service)\n* [angular-fullstack:constant](https://github.com/yeoman/generator-angular#service)\n* [angular-fullstack:decorator](https://github.com/yeoman/generator-angular#decorator)\n* [angular-fullstack:view](https://github.com/yeoman/generator-angular#view)\n\nFullstack sub-generators:\n\n* [angular-fullstack:deploy](#deploy)\n\n**Note: Generators are to be run from the root directory of your app.**\n\nRead more on the angular sub-generators from the offical [generator angular documentation][1] \n\n## Fullstack sub-generators\n\n### Deploy\nInitalizes a heroku app and generates a `dist` folder which is ready to push to heroku.\n\nTo do the same manually, you need to:\n\n1. Build a dist folder\n2. Create a Procfile in the dist folder\n3. Create a repository: `git init && git add -A && git commit -m \"Initial commit\"`\n4. Create a heroku app: `heroku apps:create && heroku config:set NODE_ENV=production`\n\nExample:\n```bash\nyo angular-fullstack:deploy heroku\n```\n\nAfter app modifications run:\n```bash\ngrunt build\n```\nthen commit and push the dist folder.\n\n## Options\nIn general, these options can be applied to any generator, though they only affect generators that produce scripts.\n\n### Jade\nFor generators that output views, the `--jade` option will output Jade instead of HTML.\n\nFor example:\n```bash\nyo angular-fullstack --jade\n```\n\nChanges the rendering engine from EJS to Jade, and generates your views as jade files instead of HTML.\n\nAssets that will be minified or compressed such as scripts, styles, and images, must still use normal html tags so they can be picked up by grunt-usemin and compressed for production builds.\n\n### CoffeeScript\nFor generators that output scripts, the `--coffee` option will output CoffeeScript instead of JavaScript.\n\nFor example:\n```bash\nyo angular-fullstack:controller user --coffee\n```\n\nProduces `app/scripts/controller/user.coffee`:\n```coffeescript\nangular.module('myMod')\n  .controller 'UserCtrl', ($scope) ->\n```\n\nA project can mix CoffeScript and JavaScript files.\n\nTo output JavaScript files, even if CoffeeScript files exist (the default is to output CoffeeScript files if the generator finds any in the project), use `--coffee=false`.\n\n### Minification Safe\n\n**Deprecated**\n\n[Related Issue #452](https://github.com/yeoman/generator-angular/issues/452): This option is being removed in future versions of the generator.\n\nBy default, generators produce unannotated code. Without annotations, AngularJS's DI system will break when minified. [ngMin](https://github.com/btford/ngmin) is used to add these annotations before minification.\n\n### Add to Index\nBy default, new scripts are added to the index file. However, this may not always be suitable. Some use cases:\n\n* Manually added to the file\n* Auto-added by a 3rd party plugin\n* Using this generator as a subgenerator\n\nTo skip adding them to the index, pass in the skip-add argument:\n```bash\nyo angular-fullstack:service serviceName --skip-add\n```\n\n## Bower Components\n\nThe following packages are always installed by the [app](#app) generator:\n\n* angular\n* angular-mocks\n* angular-scenario\n\n\nThe following additional modules are available as components on bower, and installable via `bower install`:\n\n* angular-cookies\n* angular-loader\n* angular-resource\n* angular-sanitize\n\nAll of these can be updated with `bower update` as new versions of AngularJS are released.\n\n## Passport boilerplate\n\nThe passport boilerplate requires the `ng-route`, `ng-resource`, and `ng-cookie` modules to work out of the box.\n\nIt generates a login, signup, and settings page, and creates the backend support for creating accounts using PassportJS.\n\n### Restricted routes\n\nFor restricting server API routes to logged in users, you can pass your routes through the `auth` middleware, which will send a 401 unauthorized error if a request is made from someone thats not authenticated.\n\nThe client side will automatically send you to the login page if it receives a 401 error.\n\nHowever, as this will load part of the page before redirecting, it will cause a flicker. A way to avoid this is to to mark the routes on the client side that you want to require authentication for. \n\nYou can do this from your `app.js` by adding the following to any client routes that you want to restrict to logged in users.\n\n```\nauthenticate: true\n```\n\nKeep in mind this client routing is only for improving the user interface. Make sure you secure your server API routes and don't give any sensitive information unless the user is authenticated or authorized.\n\n## Testing\n\nRunning `grunt test` will run the client and server unit tests with karma and mocha.\n\nUse `grunt test:server` to only run server tests.\n\nUse `grunt test:client` to only run client tests.\n\n## Contribute\n\nSee the [contributing docs](https://github.com/yeoman/yeoman/blob/master/contributing.md)\n\nWhen submitting an issue, please follow the [guidelines](https://github.com/yeoman/yeoman/blob/master/contributing.md#issue-submission). Especially important is to make sure Yeoman is up-to-date, and providing the command or commands that cause the issue.\n\nWhen submitting a PR, make sure that the commit messages match the [AngularJS conventions](https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/).\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php)\n\n\n  [1]: https://github.com/yeoman/generator-angular#generators\n",
  "readmeFilename": "readme.md",
  "_id": "generator-angular-fullstack@1.3.3",
  "_from": "generator-angular-fullstack@"
}
